{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../service/authentication.service';\nimport { EnvironmentUrlService } from '../../../service/environment-url.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/authentication.service\";\nimport * as i2 from \"../../../service/environment-url.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction ForgotPasswordComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\");\n  }\n}\n\nfunction ForgotPasswordComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \"\");\n  }\n}\n\nfunction ForgotPasswordComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(_authService, envUrl) {\n      this._authService = _authService;\n      this.envUrl = envUrl;\n\n      this.validateControl = controlName => {\n        return this.forgotPasswordForm.get(controlName).invalid && this.forgotPasswordForm.get(controlName).touched;\n      };\n\n      this.hasError = (controlName, errorName) => {\n        return this.forgotPasswordForm.get(controlName).hasError(errorName);\n      };\n\n      this.forgotPassword = forgotPasswordFormValue => {\n        this.submitted = true;\n        this.showError = this.showSuccess = false;\n        const forgotPass = Object.assign({}, forgotPasswordFormValue);\n        const forgotPassDto = {\n          email: forgotPass.email,\n          clientURI: this.envUrl.urlAddress + '/resetpassword'\n        };\n\n        this._authService.forgotPassword('api/accounts/forgotpassword', forgotPassDto).subscribe({\n          next: res => {\n            if (res.succeeded) {\n              this.showSuccess = true;\n              this.successMessage = 'The link has been sent, please check your email to reset your password.';\n            }\n          },\n          error: err => {\n            this.submitted = false;\n            this.showError = true;\n            this.errorMessage = err.message;\n          }\n        });\n      };\n    }\n\n    ngOnInit() {\n      this.forgotPasswordForm = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email])\n      });\n    }\n\n  }\n\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.EnvironmentUrlService));\n  };\n\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    features: [i0.ɵɵProvidersFeature([AuthenticationService, EnvironmentUrlService])],\n    decls: 17,\n    vars: 6,\n    consts: [[1, \"surface-ground\"], [1, \"flex\", \"flex-wrap\", \"justify-content-center\"], [1, \"w-full\", \"lg:w-6\", \"p-4\", \"lg:p-7\", \"surface-card\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"mb-5\"], [1, \"text-2xl\", \"font-medium\", \"text-900\"], [\"class\", \"error\", 4, \"ngIf\"], [\"class\", \"success\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"block\", \"text-900\", \"font-medium\", \"mb-2\"], [1, \"\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"pInputText\", \"\", 1, \"form-control\", \"md:col-6\", \"col-12\"], [\"class\", \"ng-dirty ng-invalid mt-2 block\", 4, \"ngIf\"], [\"type\", \"submit\", \"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Submit\", 1, \"mt-4\", 3, \"disabled\"], [1, \"error\"], [1, \"ml-2\", \"flex\", \"align-items-center\"], [1, \"success\"], [1, \"ng-dirty\", \"ng-invalid\", \"mt-2\", \"block\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n        i0.ɵɵtext(5, \"Forgot Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, ForgotPasswordComponent_div_6_Template, 3, 1, \"div\", 5);\n        i0.ɵɵtemplate(7, ForgotPasswordComponent_div_7_Template, 3, 1, \"div\", 6);\n        i0.ɵɵelementStart(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.forgotPassword(ctx.forgotPasswordForm.value);\n        });\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelement(13, \"input\", 11);\n        i0.ɵɵtemplate(14, ForgotPasswordComponent_small_14_Template, 2, 0, \"small\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"button\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@fadeAnimation\", undefined);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSuccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.forgotPasswordForm.valid || ctx.submitted);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}