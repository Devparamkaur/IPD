{"ast":null,"code":"import { AuthenticationService } from '../../../service/authentication.service';\nimport { EnvironmentUrlService } from '../../../service/environment-url.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../service/authentication.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"../../../common/helpers\";\nimport * as i5 from \"../../../service/environment-url.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction RegisterComponent_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_small_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Please provide a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_small_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"The Password and Confirmation Password do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"ng-invalid ng-dirty\": a0\n  };\n};\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(activatedRoute, authService, messageService, helpers, router, envUrl) {\n      this.activatedRoute = activatedRoute;\n      this.authService = authService;\n      this.messageService = messageService;\n      this.helpers = helpers;\n      this.router = router;\n      this.envUrl = envUrl;\n\n      this.validateControl = controlName => {\n        let form = this.basicInfoForm;\n        return form.get(controlName).invalid && form.get(controlName).touched;\n      };\n\n      this.hasError = (controlName, errorName) => {\n        let form = this.basicInfoForm;\n        return form.get(controlName).hasError(errorName);\n      };\n\n      this.registerUser = basicInfoFormValue => {\n        const formValues = Object.assign({}, basicInfoFormValue);\n        const user = {\n          firstName: formValues.firstName,\n          lastName: formValues.lastName,\n          email: formValues.email,\n          password: formValues.password,\n          confirmPassword: formValues.confirmPassword,\n          clientURI: this.envUrl.urlAddress + '/emailconfirmation'\n        };\n        this.authService.registerUser(\"api/accounts/BasicInfo\", user).subscribe({\n          next: res => {\n            if (res.succeeded) {\n              this.messageService.success('Please verify your email from your account');\n              this.router.navigate(['/confirmation-email-sent', {\n                email: user.email,\n                uri: user.clientURI\n              }]);\n            }\n          },\n          error: err => {\n            this.messageService.error(err.message);\n          }\n        });\n      };\n    }\n\n    ngOnInit() {\n      this.activatedRoute.queryParams.subscribe(params => {});\n    }\n\n    showResponse(response) {//call to a backend to verify against recaptcha with private key\n    }\n\n    validateAreEqual(c) {\n      return c.value.password === c.value.confirmPassword ? null : {\n        notmatched: true\n      };\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Helpers), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i5.EnvironmentUrlService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    features: [i0.ɵɵProvidersFeature([AuthenticationService, ToastrService, EnvironmentUrlService])],\n    decls: 23,\n    vars: 23,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"firstName\", 1, \"block\", \"text-900\", \"font-medium\", \"mb-2\"], [\"id\", \"firstName\", \"formControlName\", \"firstName\", \"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"First Name\", 1, \"w-full\", \"p-3\", 3, \"required\", \"ngClass\"], [\"class\", \"ng-dirty ng-invalid mt-2 block\", 4, \"ngIf\"], [\"for\", \"lastName\", 1, \"block\", \"text-900\", \"font-medium\", \"mt-3\", \"mb-2\"], [\"id\", \"lastName\", \"formControlName\", \"lastName\", \"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"Last Name\", 1, \"w-full\", \"p-3\", 3, \"required\", \"ngClass\"], [\"for\", \"email\", 1, \"block\", \"text-900\", \"font-medium\", \"mt-3\", \"mb-2\"], [\"pInputText\", \"\", \"id\", \"email\", \"formControlName\", \"email\", \"type\", \"text\", \"placeholder\", \"Email Address\", 1, \"w-full\", \"p-3\", 3, \"required\", \"ngClass\"], [\"for\", \"password\", 1, \"block\", \"text-900\", \"font-medium\", \"mt-3\", \"mb-2\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", \"pInputText\", \"\", \"placeholder\", \"Password\", 1, \"w-full\", \"p-3\", 3, \"required\", \"ngClass\"], [\"for\", \"confirmPassword\", 1, \"block\", \"text-900\", \"font-medium\", \"mt-3\", \"mb-2\"], [\"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"type\", \"password\", \"pInputText\", \"\", \"placeholder\", \"Confirm Password\", 1, \"w-full\", \"p-3\", 3, \"required\", \"ngClass\"], [\"type\", \"submit\", \"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Continue\", 1, \"w-full\", \"py-3\", \"font-medium\", 3, \"disabled\"], [1, \"ng-dirty\", \"ng-invalid\", \"mt-2\", \"block\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.registerUser(ctx.basicInfoForm.value);\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵtemplate(4, RegisterComponent_small_4_Template, 2, 0, \"small\", 3);\n        i0.ɵɵelementStart(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵtemplate(8, RegisterComponent_small_8_Template, 2, 0, \"small\", 3);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \" Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵtemplate(12, RegisterComponent_small_12_Template, 2, 0, \"small\", 3);\n        i0.ɵɵtemplate(13, RegisterComponent_small_13_Template, 2, 0, \"small\", 3);\n        i0.ɵɵelementStart(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, RegisterComponent_small_17_Template, 2, 0, \"small\", 3);\n        i0.ɵɵelementStart(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵtemplate(21, RegisterComponent_small_21_Template, 2, 0, \"small\", 3);\n        i0.ɵɵelement(22, \"button\", 12);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.basicInfoForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.validateControl(\"firstName\") && ctx.hasError(\"firstName\", \"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"firstName\") && ctx.hasError(\"firstName\", \"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.validateControl(\"lastName\") && ctx.hasError(\"lastName\", \"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"lastName\") && ctx.hasError(\"lastName\", \"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"email\") || ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.basicInfoForm.hasError(\"notmatched\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.basicInfoForm.controls[\"confirmPassword\"].touched && ctx.basicInfoForm.hasError(\"notmatched\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.basicInfoForm.valid);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName],\n    data: {\n      animation: []\n    }\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}