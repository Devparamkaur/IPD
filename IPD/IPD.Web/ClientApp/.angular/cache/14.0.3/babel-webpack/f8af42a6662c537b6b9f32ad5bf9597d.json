{"ast":null,"code":"import { Constants } from './constants';\nimport { ActiveItem } from './enums';\nimport * as i0 from \"@angular/core\";\n/* App Helpers */\n\nexport let Helpers = /*#__PURE__*/(() => {\n  class Helpers {\n    constructor() {\n      //Converts string to UUID\n      this.stringToUuid = str => {\n        let g = str.replace(\"-\", \"\");\n        g = g.substring(0, 32);\n\n        if (/^[0-9A-F]{32}$/i.test(g)) {\n          g = g.replace(/(.{8})(.{4})(.{4})(.{4})(.{12})/, \"$1-$2-$3-$4-$5\");\n        }\n\n        return g;\n      };\n    }\n\n    getBreadcrumbs(activeItem) {\n      let itemsToReturn = [];\n      let items = Constants.BREADCRUMBS;\n      let item = items.filter(x => x.Id == activeItem)[0];\n\n      if (typeof item != typeof undefined) {\n        item.Active = true;\n\n        do {\n          itemsToReturn.push(item);\n          item = items.filter(x => x.Id == item.ParentId)[0];\n        } while (typeof item != typeof undefined && item.Id != ActiveItem.Root);\n      }\n\n      return itemsToReturn.reverse();\n    } //Generates Id\n\n\n    generateId() {\n      return (Math.random() + 1).toString(36).substring(7);\n    }\n\n  }\n\n  Helpers.ɵfac = function Helpers_Factory(t) {\n    return new (t || Helpers)();\n  };\n\n  Helpers.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Helpers,\n    factory: Helpers.ɵfac\n  });\n  return Helpers;\n})();","map":null,"metadata":{},"sourceType":"module"}